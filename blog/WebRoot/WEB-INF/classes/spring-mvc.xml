<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"   
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/task  
                        http://www.springframework.org/schema/task/spring-task-3.1.xsd    
                        http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/cache
						http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
                        " >
    <context:annotation-config />  
     <!-- 处理请求返回json字符串的中文乱码问题 -->
		 <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" >  
	      <property name="messageConverters">  
	        <list>  
	            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />  
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter">  
	                <property name="supportedMediaTypes">  
	                    <list>  
	                        <value>text/plain;charset=utf-8</value>  
	                        <value>text/html;charset=UTF-8</value>  
	                    </list>  
	                </property>  
	            </bean>  
	        </list>  
	      </property>  
	     </bean>  
    <mvc:annotation-driven />
    <task:annotation-driven/>
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
    <context:component-scan base-package="com.blog.*" />
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value> 
                <value>application/json;charset=UTF-8</value> 
            </list>  
        </property>  
    </bean>  
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean  class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->  
            </list>  
        </property>  
    </bean>  
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/jsp/" />  
        <property name="suffix" value=".jsp" />  
    </bean>  
      
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->  
        <property name="maxUploadSize" value="10485760000" />    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />    
    </bean>   
  <!-- 开启Spring MVC的aspect自动代理 -->
  <aop:aspectj-autoproxy proxy-target-class="true"/>
  <!-- 用来定义那些类需要采用事物管理 spring 事物的动态代理类 BeanNameAutoProxyCreator 根据类名自动代理，接受表达式 -->  
    <bean id="BeanProxy" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">  
        <property name="beanNames">  
            <!-- 对类名以ServiceImpl结尾的类进行代理 -->  
            <value>*ServiceImpl</value>  
        </property>  
        <!-- 对代理类进行加载拦截器(实现通知的过程) -->  
<!--         <property name="interceptorNames">  
            <list>  
                <value>transactionInterceptor</value>  
            </list>  
        </property>   -->
    </bean>

	<!-- 配置Spring拦截器 -->
<!-- 	<mvc:interceptors>  
        <mvc:interceptor>  
            <mvc:mapping path="/article/manage/*" />
            <mvc:exclude-mapping path="/article/manage/articleList.html" /> 除了articleList.html这个请求  
            <mvc:exclude-mapping path="/article/manage/articleDetail.html" />
            <mvc:exclude-mapping path="/article/manage/seeArticleDetail.html" /> 前台页面查看详情   
            <mvc:exclude-mapping path="/article/manage/faceArticleList.html"/> 前台我的blog文章        
            <bean class="com.blog.CommonInterceptor" />  
        </mvc:interceptor>  
    </mvc:interceptors>  -->

	<!-- 配置Spring定时器 -->
			<!-- 要调用的工作类 -->
 	<bean id="syncSchedule" class="com.blog.SyncSchedule"></bean>
		<!-- 	定义调用对象和调用对象的方法 -->
	 <bean id="myFactory" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"> 
<!-- 		调用的类 -->
		<property name="targetObject">
			<ref bean="syncSchedule" />
		</property>
<!-- 		调用类中的方法 -->
		<property name="targetMethod">
			<value>springTask</value>
		</property>
	</bean>
	
<!-- 		定义触发时间 -->
	<bean id="myTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="myFactory" />
		</property>
<!-- 		cron表达式 每隔30秒执行一次任务 -->
		<property name="cronExpression">
		<!-- 	<value>0/20 * * * * ?</value>  每20秒执行一次 -->
			 <value>0 0 06 * * ?</value>    <!-- 每天下午6点 -->
		</property>
	</bean>
	
<!-- 	总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序 -->
	<bean id="schedulerFactory" lazy-init="true" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="myTrigger" />
			</list>
		</property>
	</bean> 
		
		
		
</beans>  